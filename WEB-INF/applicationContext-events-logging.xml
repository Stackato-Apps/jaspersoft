<?xml version="1.0" encoding="UTF-8"?>

<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:util="http://www.springframework.org/schema/util"
       xsi:schemaLocation="
http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-2.0.xsd
http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util-2.0.xsd">

    <bean id="accessEventPurgerJob" class="org.springframework.scheduling.quartz.MethodInvokingJobDetailFactoryBean">
        <property name="targetObject" ref="accessService"/>
        <property name="targetMethod" value="purgeAccessEvents"/>
    </bean>

    <bean id="accessEventPurgerTrigger" class="org.springframework.scheduling.quartz.CronTriggerBean">
        <property name="jobDetail" ref="accessEventPurgerJob"/>
        <property name="cronExpression" value="0 0 1 * * ?"/>
        <property name="volatility" value="true"/>
    </bean>

    <bean id="accessServiceTarget"
        class="com.jaspersoft.jasperserver.api.logging.access.service.impl.AccessServiceImpl">
        <property name="sessionFactory" ref="sessionFactory"/>
        <property name="hibernateRepositoryService" ref="repositoryService"/>
        <property name="persistentUserResolver" ref="${bean.userAuthorityService}"/>
        <property name="persistentClassFactory" ref="persistentMappings"/>
        <property name="clientClassFactory" ref="mappingResourceFactory"/>
        <property name="maxAccessEventAge" value="60"/>
    </bean>

    <bean id="accessServiceTransactionInterceptor"
    	class="org.springframework.transaction.interceptor.TransactionInterceptor">
        <property name="transactionManager" ref="transactionManager"/>
        <property name="transactionAttributes">
            <props>
                <prop key="save*">PROPAGATION_REQUIRED</prop>
                <prop key="purge*">PROPAGATION_REQUIRES_NEW</prop>
                <prop key="*">PROPAGATION_SUPPORTS</prop>
            </props>
        </property>
    </bean>

    <bean id="hibernateAccessEventDeleteListener"
          class="com.jaspersoft.jasperserver.api.logging.access.service.impl.HibernateAccessEventDeleteListener"/>

    <bean id="accessService" class="org.springframework.aop.framework.ProxyFactoryBean">
      <property name="interceptorNames">
        <list>
          <idref local="accessServiceTransactionInterceptor"/>
          <idref local="accessServiceTarget"/>
        </list>
      </property>
    </bean>

    <bean id="loggingFilter" class="com.jaspersoft.jasperserver.api.logging.filter.StandardLoggingFilter">
        <property name="loggingContextProvider" ref="${bean.loggingContextProvider}"/>
    </bean>

    <bean id="loggingContextProvider"
          class="com.jaspersoft.jasperserver.api.logging.context.impl.LoggingContextProviderImpl">
        <property name="enabledLoggingTypesMap">
            <map>
                <entry key="com.jaspersoft.jasperserver.api.logging.monitor.domain.MonitorEvent" value="false"/>
                <entry key="com.jaspersoft.jasperserver.api.logging.access.domain.AccessEvent" value="true"/>
            </map>
        </property>
        <property name="loggingService" ref="loggingEventsService"/>
    </bean>

    <bean id="loggingEventsService"
          class="com.jaspersoft.jasperserver.api.logging.service.impl.LoggingFacade">
        <property name="routingMap">
            <map>
                <!--<entry key="com.jaspersoft.jasperserver.api.logging.monitor.domain.MonitorEvent"
                       value-ref="ref to logging service">-->
                <entry key="com.jaspersoft.jasperserver.api.logging.access.domain.AccessEvent"
                       value-ref="accessService"/>
            </map>
        </property>
    </bean>

    <bean id="accessContext"
          class="com.jaspersoft.jasperserver.api.logging.access.context.impl.AccessContextImpl">
        <property name="clientClassFactory" ref="mappingResourceFactory"/>
        <property name="loggingContextProvider" ref="${bean.loggingContextProvider}"/>
    </bean>

    <bean id="dummyAuditContext"
          class="com.jaspersoft.jasperserver.api.logging.audit.context.impl.DummyAuditContext"/>

</beans>
